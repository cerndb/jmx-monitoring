# Here in this file you specify the JAVA command line arguments without the "-D" starting

com.sun.management.jmxremote.ssl.need.client.auth=false

# in case you want to connect remotely you need to set local only to false and you need to enable remote access
com.sun.management.jmxremote.local.only=false
com.sun.management.jmxremote=true

# in case you want the JMX connection done through SSL then you need to set this value to true
# please not that this will use the host SSL certificate which we specify in the current  example in ssl.properties
com.sun.management.jmxremote.ssl=true

# the certificate settings can come from a property file. This is how you link the certificate related information to the JVM.
com.sun.management.jmxremote.ssl.config.file=/opt/cert/ssl.properties

# its highly advised to enable authentication for the JMX, but you can access it without authentication as well by setting this value false
com.sun.management.jmxremote.authenticate=true

# its very imporant that you specify the JMX and the RMI port. If you do not specify them they will be automatically assigned to some other ports.
# the default rule for the port is that the JMX port should be less by one then the RMI port. 
# you can speficfy the ports whatever number better for you. The only which you have to watch over is that for JMX the connection string you need to specify the different ports. read more about it in the readme
com.sun.management.jmxremote.port=$PortNumber1
com.sun.management.jmxremote.rmi.port=$PortNumber2

# In case you are not connecting anonymously to JMX then you can create groups with different permission level JVM control
# In the configuration file you specify the different user groups for the JVM. Please note that this user grouping exists only for that particular JVM.
# com.sun.management.jmxremote.access.file=/opt/jmx_access/jmxremote.access

# ##########################################
# In case you have selected non anonymous connection you have to specify one authentication method.

# >> Basic authentication
# In case you want to have basic username and password authentication you need to link a username-password file. 
# Please note that here the username and the password should match the group name which you specified in the JMX access file.  
# Here I mean you have a "controlRole" username in the password file with the password "tomcat" and the role which you map the user is the same in the access file as the authenticated user's ("controlRoler"). 
# com.sun.management.jmxremote.password.file=/opt/jmx_access/jmxremote.password

# >> LDAP authentication
# For LDAP authentication you need to link an LDAP configuration block to the JVM the linking you can find in the "setenv.sh" and as an additional step you have to specify which login block you want to use from the configuration file.
# The reason why the settings are splitted into different files, beucase this property file can have only command line argumenst from the following namespace: "com.sun.management.jmxremote".
# Please be note that this value should be match the block name in the LDAP configuration file. So in the LDAP config there should be a block called "CustomLDAPLogin".
# com.sun.management.jmxremote.login.config=CustomLDAPLogin
# ##########################################